"""Modified User Table

Revision ID: 9b68fdec26b4
Revises: 5a72f2c8b17c
Create Date: 2024-11-13 16:28:50.579132

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import ENUM

# revision identifiers, used by Alembic.
revision: str = '9b68fdec26b4'
down_revision: Union[str, None] = '5a72f2c8b17c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

social_provider_enum = ENUM('GOOGLE', 'NAVER', 'KAKAO', name='socialprovider')
user_role_enum = ENUM('student', 'teacher', name='userrole')

def upgrade() -> None:
    social_provider_enum.create(op.get_bind(), checkfirst=True)
    user_role_enum.create(op.get_bind(), checkfirst=True)
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('external_id', sa.String(length=16), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('email', sa.String(length=64), nullable=False))
    op.add_column('users', sa.Column('phone', sa.String(length=13), nullable=True))
    op.add_column('users', sa.Column('password', sa.String(length=64), nullable=False))
    op.add_column('users', sa.Column('profile_image', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('social_provider', social_provider_enum, nullable=False))
    op.add_column('users', sa.Column('role', user_role_enum, nullable=False))
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               )
    op.create_unique_constraint(None, 'users', ['email'])
    op.drop_column('users', 'name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='unique')  # type: ignore
    op.alter_column('users', 'id',
                    existing_type=sa.Integer(),
                    type_=sa.BIGINT(),
                    existing_nullable=False,
                    )
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'role')
    op.drop_column('users', 'social_provider')
    op.drop_column('users', 'profile_image')
    op.drop_column('users', 'password')
    op.drop_column('users', 'phone')
    op.drop_column('users', 'email')
    op.drop_column('users', 'external_id')

    # ENUM 타입을 제거합니다.
    user_role_enum.drop(op.get_bind(), checkfirst=True)
    social_provider_enum.drop(op.get_bind(), checkfirst=True)